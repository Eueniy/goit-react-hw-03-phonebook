{"version":3,"sources":["components/Filter.js","components/ContactListItem.js","components/ContactList.js","components/ContactForm.js","components/App.js","index.js"],"names":["Filter","value","onChangeFilter","type","name","onChange","ContactListItem","contact","onDeleteContact","number","onClick","id","ContactList","contacts","map","key","ContactForm","state","handleChange","e","target","setState","handleSubmit","preventDefault","props","onSubmitData","reset","this","onSubmit","placeholder","Component","App","filter","addContact","uuid","find","alert","changeFilter","getFilteredContacts","toLowerCase","includes","persistantContacts","localStorage","getItem","JSON","parse","prevState","setItem","stringify","visibleContacts","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3449f215.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <>\r\n      <p>Find contacts by name</p>\r\n      <input\r\n        type=\"search\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onChangeFilter}\r\n      ></input>\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactList from \"./ContactList\";\r\n\r\nexport default function ContactListItem({ contact, onDeleteContact }) {\r\n  return (\r\n    <>\r\n      <span>\r\n        {contact.name} : {contact.number}\r\n      </span>\r\n      <button type=\"button\" onClick={() => onDeleteContact(contact.id)}>\r\n        Delete contact\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"./ContactListItem\";\r\n\r\nexport default function ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul>\r\n      {contacts.map((contact) => (\r\n        <li key={contact.id}>\r\n          <ContactListItem\r\n            contact={contact}\r\n            onDeleteContact={onDeleteContact}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!this.state.name || !this.state.number) {\r\n      return;\r\n    }\r\n    this.props.onSubmitData({ ...this.state });\r\n    this.reset();\r\n  };\r\n\r\n  reset() {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <h2>Name</h2>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n          <h2>Number</h2>\r\n          <input\r\n            type=\"tel\"\r\n            placeholder=\"Enter number\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n          <p />\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmitData: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport Filter from \"./Filter\";\nimport ContactList from \"./ContactList\";\nimport ContactForm from \"./ContactForm\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const persistantContacts = localStorage.getItem(\"contacts\");\n    if (persistantContacts) {\n      this.setState({\n        contacts: JSON.parse(persistantContacts),\n      });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  onSubmitData = (e) => {\n    const { contacts } = this.state;\n\n    const addContact = {\n      id: uuid(),\n      name: e.name,\n      number: e.number,\n    };\n    if (contacts.find((contact) => contact.name === addContact.name)) {\n      alert(`${addContact.name} is already in contacts.`);\n      return;\n    }\n    this.setState({\n      contacts: [...contacts, addContact],\n    });\n  };\n\n  onDeleteContact = (id) => {\n    this.setState({\n      contacts: this.state.contacts.filter((contact) => contact.id !== id),\n    });\n  };\n\n  changeFilter = (e) => {\n    const { value } = e.target;\n    this.setState({ filter: value });\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  render() {\n    const { contacts, name, number, filter } = this.state;\n    const visibleContacts = this.getFilteredContacts();\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmitData={this.onSubmitData} />\n        {contacts.length !== 0 && (\n          <>\n            <h2>Contacts</h2>\n            {contacts.length > 1 && (\n              <Filter value={filter} onChangeFilter={this.changeFilter} />\n            )}\n            <ContactList\n              contacts={visibleContacts}\n              onDeleteContact={this.onDeleteContact}\n            />\n          </>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}